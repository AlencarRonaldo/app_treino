// ConfiguraÃ§Ã£o do Google Sign-In
export const GOOGLE_CONFIG = {
  // IMPORTANTE: Substitua este ID pelo seu Web Client ID do Google Cloud Console
  // Passos para obter:
  // 1. Acesse https://console.cloud.google.com/
  // 2. Crie ou selecione um projeto
  // 3. Ative a API Google Sign-In
  // 4. Crie credenciais OAuth 2.0
  // 5. Copie o Web Client ID aqui
  WEB_CLIENT_ID: 'YOUR_WEB_CLIENT_ID.googleusercontent.com',
  
  // Para desenvolvimento/testes, vocÃª pode usar um ID temporÃ¡rio
  // Mas para produÃ§Ã£o, vocÃª DEVE configurar um ID real
  DEV_WEB_CLIENT_ID: '123456789-abcdefghijklmnopqrstuvwxyz.googleusercontent.com',
};

// FunÃ§Ã£o para obter o Client ID correto
export const getWebClientId = () => {
  // Em desenvolvimento, use o ID de desenvolvimento
  // Em produÃ§Ã£o, use o ID real
  const isProduction = process.env.NODE_ENV === 'production';
  
  return isProduction ? GOOGLE_CONFIG.WEB_CLIENT_ID : GOOGLE_CONFIG.DEV_WEB_CLIENT_ID;
};

// InstruÃ§Ãµes para configurar Google Sign-In
export const SETUP_INSTRUCTIONS = `
ðŸ”§ Como configurar o Google Sign-In:

1. GOOGLE CLOUD CONSOLE:
   â€¢ Acesse: https://console.cloud.google.com/
   â€¢ Crie um novo projeto ou selecione existente
   â€¢ Ative "Google Sign-In API"

2. CREDENCIAIS OAUTH:
   â€¢ VÃ¡ em "APIs & Services" > "Credentials"
   â€¢ Clique "Create Credentials" > "OAuth 2.0 Client ID"
   â€¢ Tipo: "Web application"
   â€¢ Authorized redirect URIs: adicione suas URLs

3. CONFIGURAR PLATAFORMAS:
   â€¢ Para Android: adicione SHA-1 fingerprint
   â€¢ Para iOS: adicione Bundle ID
   â€¢ Para Web: configure authorized domains

4. ATUALIZAR CÃ“DIGO:
   â€¢ Copie o Web Client ID
   â€¢ Cole em config/googleSignIn.ts
   â€¢ Substitua GOOGLE_CONFIG.WEB_CLIENT_ID

5. TESTING:
   â€¢ Adicione emails de teste em OAuth consent screen
   â€¢ Configure domÃ­nios autorizados

Para mais detalhes: https://docs.expo.dev/guides/authentication/#google
`;